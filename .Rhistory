rm(list=ls())
setwd("~/Library/Mobile Documents/com~apple~CloudDocs/Uni/Bachelorarbeit/Pomeranz/Replication Thesis/burke - warming increases the risk of civil war in africa/DATA/Raster countries/shapefile GADM ")
library(rgdal)
install.packages("rgdal")
rm(list=ls())
setwd("~/Library/Mobile Documents/com~apple~CloudDocs/Uni/Bachelorarbeit/Pomeranz/Replication Thesis/burke - warming increases the risk of civil war in africa/DATA/Raster countries/shapefile GADM ")
help(summary)
?summary
man(summary)
?summary()
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
library(ISLR) # contains Auto data set
library(MASS) # for stepAIC formula
library(leaps) # for regsubsets model selection
data(Auto) # load data set
pairs(Auto[, !names(Auto) == "name"]) # scatterplot between all variables , excluding name
cor(Auto[, !names(Auto) == "name"]) # correlation between all variables , excluding name
Auto$origin <- as.factor(Auto$origin) # transform origin variable from integer to factor - this way R will automatically code a dummy variable for it in the regression formula
model1 <- lm(mpg ~.-name, Auto)
summary(model1)
model2 <- lm(mpg ~. -name + cylinders:displacement + cylinders*origin + horsepower*acceleration , Auto)
summary(model2)
model3 <- lm(mpg ~(. -name)^2, Auto)
summary(model3)
model4 <- lm(mpg ~. -name - horsepower + log(acceleration) + poly(horsepower, 2), Auto)
summary(model4)
model_forward <- regsubsets(mpg ~. -name, Auto, method = "forward") #nvmax states the maximum number of predictors, we only have 7 so 10 will allow for all to be included
model_backward <- regsubsets(mpg ~. -name, Auto, method = "backward")
summary(model_forward)
summary(model_backward)
install.packages("pandoc")
?regsubsets
?stepAIC
model_forward <- stepAIC(model1)
model_forward <- stepAIC(model1, direction = "forward")
summary(model_forward)
model_forward <- stepAIC(model1, direction = "forward")
stepAIC(model1, direction = "forward")
stepAIC(model1, direction = "backward")
model_forward <- stepAIC(model2, direction = "forward")
model_forward <- stepAIC(model3, direction = "forward")
model0 <- lm(mpg ~ displacement, Auto)
summary(model0)
model_forward <- stepAIC(model0, scope = ~. -name, direction = "forward")
model_forward <- stepAIC(model0, scope = model1, direction = "forward")
model_forward <- stepAIC(model0, scope = ~. + cylinders + horsepower, direction = "forward")
model_forward <- stepAIC(model0, scope = list(lower = "model0", upper = "model1"), direction = "forward")
summary(model_backward)
model_forward <- stepAIC(model0, scope = list(lower = "model0", upper = "model1"), direction = "forward")
model_backward <- stepAIC(model1, direction = "backward")
summary(model_forward)
summary(model_backward)
2^40
2^20
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, error = FALSE, message = FALSE)
library(ggplot2)
library(zoo)
library(MASS)
# import data set
LungCapData <- read.table(file = "C:/Users/Young/Desktop/Big Data/LungCapData.txt",
header = TRUE, sep = "\t")
LungCapData <- read.table(file = "C:/Users/Young/Desktop/Big Data/LungCapData2.txt",
header = TRUE, sep = "\t")
LungCapData <- read.table(file = "./LungCapData2.txt",
header = TRUE, sep = "\t")
# import data set
LungCapData <- read.table(file = ".\LungCapData2.txt",
ungCapData <- read.table(file = ".\LungCapData2.txt",
# import data set
LungCapData <- read.table(file = "~/LungCapData2.txt",
header = TRUE, sep = "\t")
setwd("~/Uni/20FS/Big Data Methods for Economists/topic 1 presentation")
# import data set
LungCapData <- read.table(file = "./LungCapData2.txt",
header = TRUE, sep = "\t")
# import data set
LungCapData <- read.table(file = "~/LungCapData2.txt",
header = TRUE, sep = "\t")
# import data set
LungCapData <- read.table(file = "./LungCapData.txt",
header = TRUE, sep = "\t")
rm(list = ls())
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, error = FALSE, message = FALSE)
library(ggplot2)
library(zoo)
library(MASS)
# import data set
LungCapData <- read.table(file = "./LungCapData.txt",
header = TRUE, sep = "\t")
# fit a model using Age and Height as independent variables.
model1 <- lm(LungCap ~ Age + Height, data = LungCapData)
# get a summary of this model
summary(model1)
View(LungCapData)
model0 <- lm(LungCap ~ 1)
attach(LungCapData)
model0 <- lm(LungCap ~ 1)
modelp <- lm(LungCap ~.)
modelp <- lm(LungCap ~., LungCapData)
forward_method <- stepAIC(model0, scope = list(lower = "model0", upper = "modelp"), direction = "forward")
backward_method <- stepAIC(modelp, direction = "backward")
stepwise_method <- stepAIC(modelp, direction = "both")
stepwise_method <- stepAIC(model0, scope = list(lower = "model0", upper = "modelp"), direction = "both")
# import a new version of data set
LungCapData2 <- read.table(file = "./LungCapData2.csv", sep=",", header=TRUE)
attach(LungCapData2)
# import a new version of data set
LungCapData2 <- read.table(file = "./LungCapData2.csv", sep=",", header=TRUE)
attach(LungCapData2)
# create new data point to predict observation
newdat <- data.frame(age = 13, height = 65)
predict(model1, newdat, interval = "confidence")
# create new data point to predict observation
newdat <- data.frame(age = 13, height = 65)
predict(model1, newdata = newdat, interval = "confidence")
?predict
# create new data point to predict observation
newdat <- data.frame(age = 13, height = 65)
predict(model1, newdata = newdat, interval = "prediction")
View(model1)
# create new data point to predict observation
newdat <- data.frame(new = c(13,65))
predict(model1, newdata = newdat, interval = "prediction")
confint(model1)
# create new data point to predict observation
confint(model1)
predict(model1, interval = "prediction")
# create new data point to predict observation
newdat <- data.frame(Age = 12, Height = 68 )
confint(model1)
predict(model1, newdata = newdat, interval = "prediction")
# define M0 and Mp with all predictors
model0 <- lm(LungCap ~ 1)
modelp <- lm(LungCap ~., LungCapData)
# use stepAIC function from MASS package
forward_method <- stepAIC(model0, scope = list(lower = "model0", upper = "modelp"), direction = "forward")
# define M0 and Mp with all predictors
model0 <- lm(LungCap ~ 1)
modelp <- lm(LungCap ~., LungCapData)
# use stepAIC function from MASS package
forward_method <- stepAIC(model0, scope = list(lower = "model0", upper = "modelp"), direction = "forward")
rm(list = ls())
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, error = FALSE, message = FALSE)
library(ggplot2)
library(zoo)
library(MASS)
# import data set
LungCapData <- read.table(file = "./LungCapData.txt",
header = TRUE, sep = "\t")
attach(LungCapData)
# fit a model using Age and Height as independent variables.
model1 <- lm(LungCap ~ Age + Height)
# get a summary of this model
summary(model1)
# get confidenceintervals of coefficients
confint(model1)
# create new data point to predict observation
newdat <- data.frame(Age = 12, Height = 68 )
predict(model1, newdata = newdat, interval = "prediction")
# define M0 and Mp with all predictors
model0 <- lm(LungCap ~ 1)
modelp <- lm(LungCap ~., LungCapData)
# use stepAIC function from MASS package
forward_method <- stepAIC(model0, scope = list(lower = "model0", upper = "modelp"), direction = "forward")
backward_method <- stepAIC(modelp, direction = "backward")
stepwise_method <- stepAIC(model0, scope = list(lower = "model0", upper = "modelp"), direction = "both")
attach(LungCapData)
class(Smoke)
levels(Smoke)
model2 <- lm(LungCap ~ Age + Smoke)
summary(model2)
####Interpretation###
#1.The average lung capacity for smokers is lower than non-smokers by roughly 0.6.
#2.Two lines are parallel: the effect of age on lung capacity is the same for smokers and non-smokers (the effect of being a smoker is the same for all ages)
#plot non-smokers in Blue
plot(Age[Smoke=="no"], LungCap[Smoke=="no"], col="blue", ylim=c(0,15), xlim=c(0,20), xlab="Age", ylab="LungCap", main="LungCap vs. Age, Smoke")
#plot smokers in red
points(Age[Smoke=="yes"], LungCap[Smoke=="yes"], col="red", pch=16)
legend(1,15, legend=c("NonSmoker", "Smoker"), col=c("blue","red"), pch=c(1,16), bty="n")
#Add in the line for smokers
abline(a=0.44, b=0.55, col="red", lwd=3)
#Add in the line for non-smokers
abline(a=1.08, b=0.55, col="blue", lwd=3)
#star symbol: include the main effects of age and smoke as well as their interaction.
model3 <- lm(LungCap ~ Age*Smoke)
coef(model3)
#colon symbol: include only the interaction effects
model4 <- lm(LungCap ~ Age + Smoke + Age:Smoke)
coef(model4)
summary(model4)
#plot non-smokers in Blue
plot(Age[Smoke=="no"], LungCap[Smoke=="no"], col="blue", ylim=c(0,15), xlim=c(0,20), xlab="Age", ylab="LungCap", main="LungCap vs. Age, Smoke")
#plot smokers in red
points(Age[Smoke=="yes"], LungCap[Smoke=="yes"], col="red", pch=16)
legend(1,15, legend=c("NonSmoker", "Smoker"), col=c("blue","red"), pch=c(1,16), bty="n")
#Add in the line for non-smokers in Blue
abline(a=1.052, b=0.558, col="blue", lwd=3)
#Add in the line for smokers in Red
abline(a=1.278, b=0.498, col="red", lwd=3)
# import a new version of data set
LungCapData2 <- read.table(file = "./LungCapData2.csv", sep=",", header=TRUE)
attach(LungCapData2)
# make a plot of LungCap vs. Height
model5 <- lm(LungCapData2$LungCap ~ LungCapData2$Height)
plot(Height, LungCap, main="Polynomial Regression", las=1)
abline(model5, lwd=3, col="red")
# in R, we cannot just put X^2 in the regression
model5_revised <- lm(LungCap ~ Height + I(Height^2))
# or we can use "poly" command
model5_revised2 <- lm(LungCap ~ poly(Height, degree = 2, raw = TRUE))
plot(Height, LungCap, main="Polynomial Regression", las=1)
abline(model5, lwd=3, col="red")
lines(smooth.spline(Height, predict(model5_revised)), col="blue", lwd=3)
View(model5_revised2)
setwd("C:/Users/marcr/GitHub/ISLR/big_data_project")
